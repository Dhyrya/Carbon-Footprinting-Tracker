{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pooja\\\\carbon-footprint-tracker-updated-final\\\\frontend\\\\src\\\\components\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  const fetchNotifications = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5000/api/notifications', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch notifications');\n      setLoading(false);\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(`http://localhost:5000/api/notifications/${notificationId}`, {\n        read: true\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(notifications.map(notif => notif.id === notificationId ? {\n        ...notif,\n        read: true\n      } : notif));\n    } catch (err) {\n      setError('Failed to update notification');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading notifications...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"page-subtitle\",\n        children: \"Stay updated with your carbon footprint alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-container\",\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bell-slash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No notifications available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification-card ${notification.read ? 'read' : 'unread'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas fa-${notification.type === 'alert' ? 'exclamation-circle' : 'info-circle'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: notification.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-date\",\n            children: new Date(notification.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), !notification.read && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markAsRead(notification.id),\n          className: \"mark-read-btn\",\n          children: \"Mark as read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Notifications, \"vlcruhFCB/K2MMjBmH2xNXCarGY=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","loading","setLoading","error","setError","fetchNotifications","token","localStorage","getItem","response","get","headers","Authorization","data","err","markAsRead","notificationId","put","read","map","notif","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","notification","type","title","message","Date","date","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pooja/carbon-footprint-tracker-updated-final/frontend/src/components/Notifications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Notifications = () => {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchNotifications();\r\n    }, []);\r\n\r\n    const fetchNotifications = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get('http://localhost:5000/api/notifications', {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            setNotifications(response.data);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            setError('Failed to fetch notifications');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const markAsRead = async (notificationId) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            await axios.put(\r\n                `http://localhost:5000/api/notifications/${notificationId}`,\r\n                { read: true },\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n            );\r\n            setNotifications(notifications.map(notif => \r\n                notif.id === notificationId ? {...notif, read: true} : notif\r\n            ));\r\n        } catch (err) {\r\n            setError('Failed to update notification');\r\n        }\r\n    };\r\n\r\n    if (loading) return <div className=\"loading\">Loading notifications...</div>;\r\n    if (error) return <div className=\"error-message\">{error}</div>;\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <div className=\"page-header\">\r\n                <h1>Notifications</h1>\r\n                <p className=\"page-subtitle\">Stay updated with your carbon footprint alerts</p>\r\n            </div>\r\n\r\n            <div className=\"notifications-container\">\r\n                {notifications.length === 0 ? (\r\n                    <div className=\"empty-state\">\r\n                        <i className=\"fas fa-bell-slash\"></i>\r\n                        <p>No notifications available</p>\r\n                    </div>\r\n                ) : (\r\n                    notifications.map((notification) => (\r\n                        <div \r\n                            key={notification.id} \r\n                            className={`notification-card ${notification.read ? 'read' : 'unread'}`}\r\n                        >\r\n                            <div className=\"notification-icon\">\r\n                                <i className={`fas fa-${notification.type === 'alert' ? 'exclamation-circle' : 'info-circle'}`}></i>\r\n                            </div>\r\n                            <div className=\"notification-content\">\r\n                                <h4>{notification.title}</h4>\r\n                                <p>{notification.message}</p>\r\n                                <span className=\"notification-date\">\r\n                                    {new Date(notification.date).toLocaleDateString()}\r\n                                </span>\r\n                            </div>\r\n                            {!notification.read && (\r\n                                <button \r\n                                    onClick={() => markAsRead(notification.id)}\r\n                                    className=\"mark-read-btn\"\r\n                                >\r\n                                    Mark as read\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}